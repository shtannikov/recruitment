// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using recruitment.Data;

#nullable disable

namespace recruitment.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("recruitment.Data.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrentStageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ElapsedDaysInCurrentStage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .HasColumnType("TEXT");

                    b.Property<string>("MobilePhone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CurrentStageId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("recruitment.Data.Funnel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Funnel");
                });

            modelBuilder.Entity("recruitment.Data.FunnelStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FunnelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FunnelId");

                    b.ToTable("FunnelStage");
                });

            modelBuilder.Entity("recruitment.Data.Vacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RecruitemtFunnelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RecruitemtFunnelId")
                        .IsUnique();

                    b.ToTable("Vacancies");
                });

            modelBuilder.Entity("recruitment.Data.Candidate", b =>
                {
                    b.HasOne("recruitment.Data.FunnelStage", "CurrentStage")
                        .WithMany("Candidates")
                        .HasForeignKey("CurrentStageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentStage");
                });

            modelBuilder.Entity("recruitment.Data.FunnelStage", b =>
                {
                    b.HasOne("recruitment.Data.Funnel", "Funnel")
                        .WithMany("Stages")
                        .HasForeignKey("FunnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funnel");
                });

            modelBuilder.Entity("recruitment.Data.Vacancy", b =>
                {
                    b.HasOne("recruitment.Data.Funnel", "RecruitemtFunnel")
                        .WithOne("Vacancy")
                        .HasForeignKey("recruitment.Data.Vacancy", "RecruitemtFunnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecruitemtFunnel");
                });

            modelBuilder.Entity("recruitment.Data.Funnel", b =>
                {
                    b.Navigation("Stages");

                    b.Navigation("Vacancy")
                        .IsRequired();
                });

            modelBuilder.Entity("recruitment.Data.FunnelStage", b =>
                {
                    b.Navigation("Candidates").AutoInclude();
                });
#pragma warning restore 612, 618
        }
    }
}
